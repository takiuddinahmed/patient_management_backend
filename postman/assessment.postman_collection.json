{
	"info": {
		"_postman_id": "d9494422-0d2c-4022-893f-bff9fa80bf26",
		"name": "assessment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const json = pm.response.json();",
							"",
							"pm.test(\"should return id\", ()=>{",
							"    pm.expect(json).to.have.property(\"_id\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"this is a kajkaj title\",\n    \"description\": \"this is a description\",\n    \"deadline\": \"2022-05-29\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/assessment/",
					"host": [
						"{{host}}"
					],
					"path": [
						"assessment",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Title should be 'editedTitle'\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.title).to.eql('editedTitle');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"{{testAssessment}}\",\n    \"title\": \"editedTitle\",\n    \"deadline\": \"2022-05-25\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/assessment/",
					"host": [
						"{{host}}"
					],
					"path": [
						"assessment",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/assessment/{{testAssessment}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"assessment",
						"{{testAssessment}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const json = pm.response.json();",
							"",
							"if(json.length){",
							"    const randomIndex = Math.floor(Math.random() * (json.length  ) );",
							"",
							"const one = json[randomIndex];",
							"    pm.test(\"Should contain id\", ()=>{",
							"        pm.expect(one).to.have.property('_id');",
							"    })",
							"",
							"    pm.globals.set(\"testAssessment\", one._id);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/assessment/",
					"host": [
						"{{host}}"
					],
					"path": [
						"assessment",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}